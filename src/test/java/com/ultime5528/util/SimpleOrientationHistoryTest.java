/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.ultime5528.util;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class SimpleOrientationHistoryTest {
    private SimpleOrientationHistory generateNotFilledHistory(){
        SimpleOrientationHistory history = new SimpleOrientationHistory(5);

        history.addAngle(1, 1);
        history.addAngle(3, 3);
        history.addAngle(6, 6);

        return history;
    }

    private SimpleOrientationHistory generateFilledHistory(){
        SimpleOrientationHistory history = new SimpleOrientationHistory(5);

        history.addAngle(1, 1);
        history.addAngle(3, 3);
        history.addAngle(6, 6);
        history.addAngle(10, 10);
        history.addAngle(15, 15);

        return history;
    }

    private SimpleOrientationHistory generateOverloadedHistory(){
        SimpleOrientationHistory history = new SimpleOrientationHistory(5);

        history.addAngle(1, 1);
        history.addAngle(3, 3);
        history.addAngle(6, 6);
        history.addAngle(10, 10);
        history.addAngle(15, 15);

        history.addAngle(21, 21);

        return history;
    }

    @Test 
    void greaterThan_notFilledHistory() {
        SimpleOrientationHistory history = generateNotFilledHistory();
        assertEquals(history.getAngleAtTimestamp(7), 6, 1e-5);
    }

    @Test 
    void greaterThan_filledHistory() {
        SimpleOrientationHistory history = generateFilledHistory();
        assertEquals(history.getAngleAtTimestamp(16), 15, 1e-5);
    }

    @Test 
    void greaterThan_overloadedHistory() {
        SimpleOrientationHistory history = generateOverloadedHistory();
        assertEquals(history.getAngleAtTimestamp(22), 21, 1e-5);
    }

    @Test 
    void lessThan_notFilledHistory() {
        SimpleOrientationHistory history = generateNotFilledHistory();
        assertEquals(history.getAngleAtTimestamp(0), 1, 1e-5);
    }

    @Test 
    void lessThan_filledHistory() {
        SimpleOrientationHistory history = generateFilledHistory();
        assertEquals(history.getAngleAtTimestamp(0), 1, 1e-5);
    }

    @Test 
    void lessThan_overloadedHistory() {
        SimpleOrientationHistory history = generateOverloadedHistory();
        assertEquals(history.getAngleAtTimestamp(0), 3, 1e-5);
    }

    @Test 
    void existing_notFilledHistory() {
        SimpleOrientationHistory history = generateNotFilledHistory();
        assertEquals(history.getAngleAtTimestamp(6), 6, 1e-5);
    }

    @Test 
    void existing_filledHistory() {
        SimpleOrientationHistory history = generateFilledHistory();
        assertEquals(history.getAngleAtTimestamp(6), 6, 1e-5);
    }

    @Test 
    void existing_overloadedHistory() {
        SimpleOrientationHistory history = generateOverloadedHistory();
        assertEquals(history.getAngleAtTimestamp(6), 6, 1e-5);
    }

    @Test 
    void interpolation_notFilledHistory() {
        SimpleOrientationHistory history = generateNotFilledHistory();
        assertEquals(history.getAngleAtTimestamp(5), 5, 1e-5);
    }

    @Test 
    void interpolation_filledHistory() {
        SimpleOrientationHistory history = generateFilledHistory();
        assertEquals(history.getAngleAtTimestamp(5), 5, 1e-5);
    }

    @Test 
    void interpolation_overloadedHistory() {
        SimpleOrientationHistory history = generateOverloadedHistory();
        assertEquals(history.getAngleAtTimestamp(5), 5, 1e-5);
    }

    @Test 
    void interpolation_overloadedHistory_last() {
        SimpleOrientationHistory history = generateOverloadedHistory();
        assertEquals(history.getAngleAtTimestamp(17), 17, 1e-5);
    }
}
